version: '3.8'

services:
  # PostgreSQL database for storing test results
  postgres:
    build:
      context: ./docker/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: test_results
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PySpark container for data processing
  spark:
    image: bitnami/spark:3.3.0
    environment:
      - SPARK_MODE=master
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./scripts:/opt/scripts
      - ./data:/opt/data
    depends_on:
      - postgres
    command: >
      bash -c "
        sleep 10 && 
        echo 'Spark master is ready'"

  # Spark worker
  spark-worker:
    image: bitnami/spark:3.3.0
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
    volumes:
      - ./scripts:/opt/scripts
      - ./data:/opt/data
    depends_on:
      - spark

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.40.0
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - metrics_exporter

  # Alert Manager for handling alerts
  alertmanager:
    image: prom/alertmanager:v0.24.0
    ports:
      - "9093:9093"
    volumes:
      - ./docker/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    depends_on:
      - prometheus

  # Grafana for visualization
  grafana:
    image: grafana/grafana:8.5.0
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    depends_on:
      - prometheus

  # Metrics exporter
  metrics_exporter:
    build:
      context: .
      dockerfile: ./docker/metrics-exporter/Dockerfile
    ports:
      - "9091:9090"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=test_results
      - DB_USER=postgres
      - DB_PASS=postgres
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres-data:
  prometheus-data:
  grafana-data:
